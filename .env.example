# ====================================================================
# DCAMOON Trading System - Environment Configuration
# ====================================================================
# Copy this file to .env and fill in your actual values
# NEVER commit the .env file to version control!
# ====================================================================

# --------------------------------------------------------------------
# REQUIRED: OpenAI API Configuration
# --------------------------------------------------------------------
# Your OpenAI API key for AI-powered trading decisions
# Get your key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# --------------------------------------------------------------------
# REQUIRED: Database Configuration
# --------------------------------------------------------------------
# Database connection string
# For local development (SQLite):
DATABASE_URL=sqlite:///dcamoon.db

# For production (PostgreSQL example):
# DATABASE_URL=postgresql://username:password@localhost:5432/dcamoon

# Enable SQL query debugging (true/false)
SQL_DEBUG=false

# --------------------------------------------------------------------
# Portfolio Configuration
# --------------------------------------------------------------------
# Your default portfolio ID (UUID)
# Leave blank to use the first portfolio in the database
# You can find your portfolio ID by running the app and checking the database
DCAMOON_PORTFOLIO_ID=

# --------------------------------------------------------------------
# Security & Encryption
# --------------------------------------------------------------------
# Master encryption key for encrypting sensitive data (API keys, etc.)
# Generate a secure key with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
# If not set, a key will be auto-generated and saved to ~/.dcamoon/master.key
DCAMOON_MASTER_KEY=

# Salt for key derivation (random string)
# Generate with: python -c "import base64, os; print(base64.urlsafe_b64encode(os.urandom(16)).decode())"
# If not set, a salt will be auto-generated and saved to ~/.dcamoon/salt.dat
DCAMOON_SALT=

# Flask secret key for session management
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your_secret_key_here_change_this_in_production

# --------------------------------------------------------------------
# Flask Application Settings
# --------------------------------------------------------------------
# Environment: development, production
FLASK_ENV=production

# Flask debug mode (true/false) - MUST be false in production!
FLASK_DEBUG=false

# Server port (default: 5001 for app.py, 5004 for simple_app.py)
PORT=5001

# --------------------------------------------------------------------
# Trading Configuration
# --------------------------------------------------------------------
# Starting cash for new portfolios (USD/GBP)
STARTING_CASH=100.0

# Maximum position size as fraction of portfolio (0.0 to 1.0)
# Example: 0.1 = max 10% of portfolio in any single position
MAX_POSITION_SIZE=0.10

# Stop loss percentage (0.0 to 1.0)
# Example: 0.20 = 20% stop loss
STOP_LOSS_PCT=0.20

# --------------------------------------------------------------------
# Market Data Configuration
# --------------------------------------------------------------------
# Default market data provider: yahoo, stooq
MARKET_DATA_PROVIDER=yahoo

# API rate limiting (requests per minute)
API_RATE_LIMIT=60

# --------------------------------------------------------------------
# Automation Settings
# --------------------------------------------------------------------
# Enable automated trading (true/false)
ENABLE_AUTOMATION=false

# Automation run schedule (cron format)
# Example: "0 9 * * 1-5" = 9am weekdays
AUTOMATION_SCHEDULE=0 9 * * 1-5

# Dry run mode - don't execute real trades (true/false)
AUTOMATION_DRY_RUN=true

# --------------------------------------------------------------------
# Logging Configuration
# --------------------------------------------------------------------
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log file path (leave empty to log to console only)
LOG_FILE=

# Enable security audit logging (true/false)
ENABLE_AUDIT_LOG=true

# --------------------------------------------------------------------
# Optional: Email Notifications
# --------------------------------------------------------------------
# SMTP server for email alerts
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
NOTIFICATION_EMAIL=

# --------------------------------------------------------------------
# Optional: Advanced Settings
# --------------------------------------------------------------------
# CSV data directory (for legacy CSV-based operations)
DATA_DIR=Scripts and CSV Files

# Cache duration for portfolio data (seconds)
CACHE_DURATION=30

# Request timeout for external APIs (seconds)
REQUEST_TIMEOUT=30

# Maximum retries for failed API calls
MAX_RETRIES=3

# Retry backoff multiplier
RETRY_BACKOFF=2

# --------------------------------------------------------------------
# Development Only
# --------------------------------------------------------------------
# Override the "today" date for testing (YYYY-MM-DD format)
# Leave blank for production
ASOF_DATE=